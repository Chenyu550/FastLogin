# FastLogin 配置
# 项目地址: https://www.spigotmc.org/resources/fastlogin.14153
# 源代码: https://github.com/games647/FastLogin
#
# 最新配置可在此处获取:
# https://github.com/games647/FastLogin/blob/main/core/src/main/resources/config.yml

# 这是一个**非常**简单的反机器人保护。建议使用专用程序解决此
# 问题。低级防火墙如uwf（或直接iptables）比Minecraft插件更高效。TCP反向
# 代理也可用于分流工作至不同主机。
#
# 这些设置将限制此插件处理的连接数。达到此限制后，FastLogin将
# 完全忽略传入连接。实际上不会有数据库请求和网络请求。
# 因此，自动登录将不可用。
anti-bot:
  enabled: true
  # 将以下视为一个桶。connections是桶中允许的总量，而expire
  # 表示每个条目过期所需的时间。
  # 总连接数
  connections: 600
  # 首次插入连接后过期并释放的分钟数
  expire: 10
  # 动作 - 当桶已满（连接过多）时应执行的操作
  # 允许值: 'ignore'（FastLogin放弃处理玩家）或 'block'（阻止此传入连接）
  action: 'ignore'

# 请求正版登录而无需玩家输入命令
#
# 如果启用autoRegister，插件将在登录时检查/执行以下步骤:
# 1. 不应存在已注册的离线账户
# -> 正版账户无法盗取已存在的离线玩家账户
# -（已注册玩家仍可使用 /premium 命令激活正版检查）
# 2. 自动用强随机密码注册账户
# -> 离线玩家无法为正版玩家注册账户，从而无法盗取账户
#
# 此外，正版玩家检查需基于玩家名称
# 这意味着如果离线玩家连接服务器，我们会要求该玩家进行正版账户登录
# 玩家会断开连接并看到消息: 'bad login' 或 'invalid session'
# 无法修改此消息
# 更多信息: https://github.com/games647/FastLogin#why-do-players-have-to-invoke-a-command
autoRegister: false

# FastLogin是否应遵循每个IP的注册限制（例如AuthMe中的设置）
# 由于大多数验证插件异步处理 - FastLogin仍会认为玩家已注册
# 为最佳效果 - 你还需要启用 auto-register-unknown
#
# 若设为true - FastLogin将始终尝试注册玩家，即使超出限制
# 具体由验证插件处理超额注册
# https://github.com/games647/FastLogin/issues/458
respectIpLimit: false

# 这是上述功能的额外配置选项。如果我们要求一个非正版但使用了正版用户名的玩家进行正版认证，
# 该玩家会因"invalid session"或"bad login"断开连接。
#
# 如果启用此选项，我们会记住该玩家，并在其再次尝试加入时不强制要求正版认证，
# 允许玩家以离线身份加入。
secondAttemptCracked: false

# 新离线玩家将被踢出服务器。适用于想从离线模式切换至在线模式且
# 不愿丢失已有玩家的情况!
#
# 已有离线和正版玩家仍可加入。此外，你可以将玩家名加入白名单，
# 即使他们是新玩家，也允许这些离线玩家加入。
switchMode: false

# 当插件检测到玩家拥有正版账户时，可设置关联的
# 正版UUID。因此当玩家更改用户名时，仍保留
# 相同玩家数据（背包、权限等）
#
# 警告: 这也意味着玩家通过离线模式连接时UUID会不同。
# 这**可能**导致插件兼容性问题。
#
# 以下为示例，并非所有插件都适用:
# 例如: 若你想封禁不在线的玩家，封禁插件会查找
# 与玩家关联的离线UUID（因为服务器处于离线模式）。此时正版
# 玩家仍可加入服务器，因其拥有不同UUID。
#
# 此外，你可能希望将离线UUID转换为正版UUID。这将确保玩家
# 从离线/离线认证切换至正版认证后保留相同背包、权限等。
#
# 此功能需要Cauldron、Spigot或其分支（如Paper）
premiumUuid: false

# 将对数据库中不存在的玩家名向Mojang服务器发起额外检查
# 以获取正版UUID。如果该正版UUID存在于数据库，我们可在成功登录时
# 假设玩家更改了用户名并更新数据库中的名称。
# 示例:
# #### 情况1
# autoRegister = false
# nameChangeCheck = false
#
# 玩家以离线身份登录，直到执行 /premium 命令。然后可覆盖现有数据库记录。
#
# #### 情况2
# autoRegister = false
# nameChangeCheck = true
#
# 连接Mojang API检查玩家的UUID（存在UUID => 正版账户）。如果数据库中存在该UUID，
# 则为**现有玩家**，FastLogin可**假定**其为正版且更改了用户名。
# 若不存在，则为新玩家且**可能是离线**。因此仅使用离线认证。
#
# **限制**: 使用正版账户新用户名的离线玩家无法加入，若数据库包含旧名称。
# （例如: 正版账户所有者已不再在服务器游玩，但期间更改了用户名）
#
# #### 情况3
# autoRegister = true
# nameChangeCheck = false
#
# 若用户名未知但被正版账户使用，始终要求正版认证。
# 这比nameChangeCheck = true 且 autoRegister = false更激进，
# 因会要求未知正版UUID的玩家进行正版认证。
#
# **限制**: 见下文
#
# #### 情况4
# autoRegister = true
# nameChangeCheck = true
#
# 基于autoRegister检查玩家名是否正版并使用正版认证登录。之后
# FastLogin接收正版UUID并更新数据库记录。
#
# **autoRegister的限制**: 使用已存在正版账户用户名的离线新玩家无法加入。
nameChangeCheck: false

# 如果正版玩家账户关联了皮肤，本插件
# 可下载数据并设置给在线玩家。
#
# 注意仅当玩家满足以下条件时生效:
# * 是正版账户所有者
# * 通过正版连接认证
# * 拥有皮肤
#
# 这意味着插件无需新建Mojang服务器连接，
# 因为皮肤数据包含在Mojang的认证响应中。若想为离线玩家
# 设置皮肤，需使用其他插件。
#
# 如果使用PaperSpigot - 即使forwardSkin设为false，FastLogin也会尝试设置皮肤
# 这是确保正版用户名更改正常工作的必要条件
# https://github.com/games647/FastLogin/issues/457
#
# 若需为离线玩家使用皮肤，需额外插件如
# ChangeSkin、SkinRestorer等
forwardSkin: true

# 显示警告信息，提示此命令**仅应**由
# 实际账户所有者执行。而非离线玩家
#
# 若仍要执行命令，需再次输入 /premium
premium-warning: true

# ======[[ 仅限Spigot+ProtocolLib用户 ]]======
# 设为true时，启用不发送服务器IP至Mojang会话服务器的
# 替代会话解析器。此设置适用于通过透明反向代理
# 或某种形式DNAT运行服务器的情况。就安全性而言，
# 此设置影响可忽略不计。
#
# 此设置原理类似server.properties中的'prevent-proxy'设置。
# 设为false时，服务器行为类似prevent-proxy=true，反之亦然。
# 通常，若prevent-proxy=true，你希望禁用此设置。
#
# 注意在非Spigot+ProtocolLib环境下此设置无效。
#
# !!! [警告] !!!
# 此选项为高度实验性。虽不太可能破坏服务器，
# 但需更多测试验证有效性。初步测试表现良好，
# 但不同环境可能有差异。
useProxyAgnosticResolver: true

# 若启用autoRegister或nameChangeCheck，可能被Mojang限速。
# 仅当用户名未知时FastLogin会发起请求。
# 允许每10分钟600次请求（每分钟60次）
# 大型服务器可能超出此限
# 达到限制后，新玩家始终以离线登录直至限速过期。
#（至下一个十分钟周期）
#
# 限制基于IP。若有多IPv4地址可在此指定。
# FastLogin将轮换使用 --> 5个不同IP即5*600/10分钟
# 若列表为空则仅使用默认IP
#
# 列表格式:
#ip-addresses:
#    - 192-168-0-2
ip-addresses: []

# 限制向Mojang API发起的用户名→UUID请求数。其他插件
# 及Minecraft本身也会发起此类请求。此选项可限制本插件的请求量。
#
# 降低此值时，其他插件仍可发起请求而FastLogin受限。
# Mojang限制每IPv4每10分钟600次请求。
mojang-request-limit: 600

# 此选项自动注册存在于FastLogin数据库但未在验证插件数据库中的玩家。
# 可能发生于切换验证插件或清空验证插件数据库时。
# https://github.com/games647/FastLogin/issues/85
auto-register-unknown: false

# 设为false可禁用FastLogin的自动登录。即使请求了正版认证，
# 玩家也不会被验证插件自动登录。
#
# 可用于双因素认证提升安全性。黑客需同时知道
# Minecraft密码和验证插件密码。
autoLogin: true

# Floodgate配置
# 通过Floodgate连接需使用Xbox Live账户登录
# !!!!!!!! 警告: FLOODGATE支持为实验性功能 !!!!!!!!
# 启用可能导致未授权账户访问！

# 自动登录通过Floodgate连接的玩家。
# 可选值:
#   false: 禁用所有Floodgate玩家的自动登录
#   true: 启用所有Floodgate玩家的自动登录
#   linked: 仅自动登录已关联Java账户的Bedrock账户
#   no-conflict: 仅当Mojang API报告无同名正版Java账户时自动登录Bedrock玩家
#     此选项适用于未在floodgate/config.yml中使用'username-prefix'的情况
# 需 'autoLogin' 设为 'true'
# !!!!!!!! 警告: FLOODGATE支持为实验性功能 !!!!!!!!
# 启用可能导致未授权账户访问！
autoLoginFloodgate: false

# 允许Floodgate或离线Geyser玩家使用已有正版Java账户名加入服务器
#
# Java和Bedrock玩家将获得不同UUID，因此背包、位置等数据独立。
# 但某些插件（如AuthMe）依赖用户名而非UUID识别玩家，可能导致问题。
# 对于AuthMe等验证插件，Java和Bedrock玩家将共享相同密码。
#
# 为防止用户名冲突，强烈建议在floodgate/config.yml中使用
#    'username-prefix'
#
# 可选值:
#   false: 若Bedrock玩家使用已有正版Java账户名，踢出
#     注意: 关联的Floodgate玩家与其Java账户同名，因此设为false将阻止所有关联玩家加入
#   true: 绕过名称冲突检查
#   linked: 允许已关联Java账户的Floodgate账户使用冲突名称
#     对于离线Geyser玩家，'linked'等同于'false'
# !!!!!!!! 警告: FLOODGATE/GEYSER支持为实验性功能 !!!!!!!!
# 启用可能导致未授权账户访问！
allowFloodgateNameConflict: false

# 自动注册通过Floodgate连接的玩家。
# autoLoginFloodgate需对该玩家可用
# 可选值:
#   false: 禁用所有Floodgate玩家的自动注册
#   true: 启用所有Floodgate玩家的自动注册
#   linked: 仅自动注册已关联Java账户的Bedrock账户
#   no-conflict: 仅当Mojang API报告无同名正版Java账户时自动注册Bedrock玩家
#     此选项适用于未在floodgate/config.yml中使用'username-prefix'的情况
# 需 'autoRegister' 设为 'true'
# !!!!!!!! 警告: FLOODGATE支持为实验性功能 !!!!!!!!
# 启用可能导致未授权账户访问！
autoRegisterFloodgate: false

# 此选项对应server.properties中的'enforce-secure-profile'配置。
# 验证玩家登录请求中的加密密钥是否由Mojang签名。该密钥
# 对需要验证玩家聊天消息未经第三方篡改的服务器至关重要。
#
# 仅在使用ProtocolLib模式且版本为1.19+时相关。
# 无代理时同样适用。
verifyClientKeys: false

# 数据库配置
# 推荐使用MariaDB（MySQL优化版）

# 单文件SQLite数据库
driver: 'sqlite'
# 文件路径
database: '{pluginDir}/FastLogin.db'

# MySQL/MariaDB
# 启用需取消注释以下行（不包括此行）
# Velocity服务端请使用'mariadb'作为驱动
#driver: 'mysql'
#host: '127.0.0.1'
#port: 3306
#database: 'fastlogin'
#username: 'myUser'
#password: 'myPassword'

# 高级连接池设置（秒）
#timeout: 30
#lifetime: 30

## 若MySQL不在同一主机运行，建议启用SSL
## 加密连接以安全传输数据库密码
#useSSL: false
## 服务器证书验证要求
## 可选值: Required（不验证SSL）、VerifyCA（验证CA）、VerifyFull（验证CA及主机名）
#sslMode=Required
## 优先使用TLS，此时使用系统证书存储验证服务器证书
## 类似HTTPS。若不可行，可使用RSA及以下选项：
## 允许从服务器请求RSA公钥加密数据。设为true可能允许中间人攻击。
#allowPublicKeyRetrieval=false
## RSA公钥路径（若禁止密钥检索）
#ServerRSAPublicKeyFile=

# 用于连接Mojang服务器检查玩家名是否为正版的HTTP代理。
# 此为解决Mojang限速的替代方案。仅当服务器触发限速时使用这些代理。
# 请确保使用可靠代理。
proxies:
  # 格式: 'IP:端口' 或 '域名:端口'
  # - 'xyz.com:1337'
  # - 'test.com:5131'
